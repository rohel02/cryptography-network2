import * as React from "react";
import Layout from "../components/layout";
import Seo from "../components/seo";

import "../styles/global.css";
import Navbar from "../components/Navbar";

const perfectSecrecyPage = () => {
  return (
    <div>
      <Navbar />
      <div className="book-container">
        <div className="content">
          <h1>Perfect Secrecy</h1>
          <h2>Encryption Scheme Definition</h2>
          <p>An encryption scheme consists of three main algorithms:</p>
          <ol>
            <li>
              <strong>Key Generation (Gen):</strong> A probabilistic algorithm generating
              uniformly a key <code>k</code> from a key space <code>K</code>.
            </li>
            <li>
              <strong>Encryption Algorithm (Enc):</strong> The encryption algorithm <code>Enc</code> takes a
              key <code>k ∈ K</code> and a message <code>m ∈ M</code> as input and outputs a ciphertext <code>c</code>. 
              It can be probabilistic, meaning that encrypting the same message <code>m</code> with the same key <code>k</code> 
              might produce different ciphertexts on different runs. This process is denoted as <code>c &larr; Enck(m)</code>. 
              If <code>Enc</code> is deterministic, it is denoted as <code>c := Enck(m)</code>. 
              The set <code>C</code> represents all possible ciphertexts generated by <code>Enck(m)</code>, across all choices of <code>k</code>, <code>m</code>, 
              and any randomness used by <code>Enc</code>.
            </li>
            <li>
              <strong>Decryption Algorithm (Dec):</strong> A deterministic algorithm recovering <code>m</code> from <code>c</code> using <code>k</code>.
            </li>
          </ol>
          <p>Key aspects of encryption schemes:</p>
          <ul>
            <li>
              <strong>Perfect Correctness:</strong> Decryption always recovers the original message,
              implying that the decryption process is deterministic.
            </li>
            <li>
              The distribution of keys <code>K</code> is determined by the encryption scheme, while the distribution of messages <code>M</code> reflects the context and adversary’s uncertainty about which messages are likely to be sent.
            </li>
            <li>
              Ciphertexts <code>C</code> are determined by the joint distribution of <code>K</code> and <code>M</code>, reflecting the encryption process.
            </li>
          </ul>
          <h2>Perfect Secrecy</h2>
          <h3>Prerequisites:</h3>
          <ul>
            <li>
              The adversary knows the probability distribution of messages (<code>M</code>), meaning they understand the likelihood of different messages being sent.
            </li>
            <li>The adversary is aware of the encryption scheme being used.</li>
            <li>
              The key shared by the communicating parties is the only unknown to the adversary.
            </li>
            <li>
              In this attack, one of the honest parties encrypts a chosen message,
              transmits the resulting ciphertext, and the adversary eavesdrops on the
              communication, gaining access to the ciphertext without any other
              context or information.
            </li>
          </ul>
          <p>
            Perfect secrecy ensures that observing a ciphertext <code>c</code> does not provide any
            information about the plaintext message <code>m</code>. This means the adversary’s
            knowledge of <code>m</code>, after observing <code>c</code>, is identical to their prior knowledge.
          </p>
          <h3>Formal Definition</h3>
          <p>
            An encryption scheme <code>(Gen, Enc, Dec)</code> with message space <code>M</code> is perfectly
            secret if for every probability distribution for <code>M</code>, every message <code>m ∈ M</code>, and
            every ciphertext <code>c ∈ C</code> for which <code>Pr[C = c] &gt; 0</code>, it holds that:
          </p>
          <blockquote>
            <code>Pr[M = m | C = c] = Pr[M = m]</code>.
          </blockquote>
        </div>
      </div>
    </div>
  );
};

export const Head = () => <Seo title="Perfect Secrecy" />;

export default perfectSecrecyPage;
