{"version":3,"file":"component---src-pages-pseudorandom-generator-page-js.js","mappings":"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","sources":["webpack://Cryptography/./src/components/Navbar.js","webpack://Cryptography/./src/components/layout.js","webpack://Cryptography/./src/components/seo.js","webpack://Cryptography/./src/pages/pseudorandomGeneratorPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport  \"../styles/global.css\"\r\n\r\nconst Navbar = () => {\r\nreturn(\r\n    <div className=\"top-menu\">\r\n        <div className=\"menu-items\">\r\n            <Link to=\"/\" className=\"menu-item\">Home</Link>\r\n            <Link to=\"/topics\" className=\"menu-item\">Topics</Link>\r\n            <Link to=\"/examples\" className=\"menu-item\">Examples</Link>\r\n            <Link to=\"/about\" className=\"menu-item\">About</Link>\r\n            <Link to=\"/contact\" className=\"menu-item\">Contact</Link>\r\n        </div>\r\n        <input type=\"text\" className=\"search-bar\" placeholder=\"Search topics...\"/>\r\n    </div>\r\n\r\n);\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"../styles/global.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", minHeight: \"100vh\" }}>\r\n\r\n      {/* Main Content */}\r\n      <main\r\n        style={{\r\n          margin: \"0 auto\",\r\n          maxWidth: \"var(--size-content)\",\r\n          padding: \"var(--space-4)\",\r\n          flex: 1, \r\n        }}\r\n      >\r\n        {children}\r\n      </main>\r\n\r\n      \r\n      <footer\r\n        style={{\r\n          textAlign: \"center\",\r\n          padding: \"var(--space-3) var(--space-4)\",\r\n          fontSize: \"var(--font-sm)\",\r\n          backgroundColor: \"#f8f9fa\", \r\n          color: \"#6c757d\", \r\n        }}\r\n      >\r\n        © {new Date().getFullYear()} · Built with Gatsby\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo\";\r\n\r\nimport \"../styles/global.css\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst pseudorandomGeneratorPage = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"book-container\">\r\n        <div className=\"content\">\r\n          <h1>Pseudorandom Generator (PRG)</h1>\r\n          <p>\r\n            To understand EAV-Security, it is necessary to introduce the concept of\r\n            pseudorandom generators (PRGs), which are fundamental components in\r\n            private-key encryption.\r\n          </p>\r\n          <p>\r\n            A pseudorandom generator <code>G</code> is an efficient, deterministic algorithm for\r\n            transforming a short, uniform string (called a seed) into a longer, uniform-looking\r\n            (or pseudorandom) output string.\r\n          </p>\r\n          <p>\r\n            The PRG is beneficial when a large number of random (or random-looking)\r\n            bits are required, as generating true random bits is often challenging and\r\n            time-consuming.\r\n          </p>\r\n          <p>\r\n            A pseudorandom generator (PRG) should pass all efficient statistical tests,\r\n            meaning that for any efficient distinguisher <code>D</code>, the probability that <code>D</code> outputs\r\n            <code>1</code> when given the output of the PRG should be close to the probability that <code>D</code>\r\n            outputs <code>1</code> when given a uniform string of the same length. This ensures that\r\n            the PRG’s output appears uniformly random to any efficient observer.\r\n          </p>\r\n          <p>\r\n            A distribution <code>Dist</code> on <code>n</code>-bit strings is considered pseudorandom if the process\r\n            of sampling a string from <code>Dist</code> is indistinguishable from sampling a uniform\r\n            <code>n</code>-bit string. Specifically, it should be infeasible for any polynomial-time\r\n            algorithm to distinguish between a string sampled from <code>Dist</code> and a uniformly\r\n            random string. Pseudorandomness is a property of distributions, not individual\r\n            strings, and is defined as a computational relaxation of true randomness.\r\n          </p>\r\n          <p>\r\n            If <code>G</code> is an efficiently computable function that maps <code>n</code>-bit strings to outputs\r\n            longer than <code>n</code>, and <code>Dist<sub>n</sub></code> is the distribution obtained by choosing a uniform\r\n            seed <code>s</code> of length <code>n</code> and outputting <code>G(s)</code>, then <code>G</code> is a pseudorandom generator if\r\n            and only if <code>Dist<sub>n</sub></code> is pseudorandom.\r\n          </p>\r\n          <h2>Definition</h2>\r\n          <p>\r\n            Let <code>G</code> be a deterministic polynomial-time algorithm such that for any <code>n</code> and\r\n            any input <code>s ∈ &#123;0, 1&#125;<sup>n</sup></code>, the result <code>G(s)</code> is a string of length <code>ℓ(n)</code>. \r\n            <code>G</code> is a pseudorandom generator if the following conditions hold:\r\n          </p>\r\n          <ol>\r\n            <li>\r\n              <strong>Expansion:</strong> For every <code>n</code>, it holds that <code>ℓ(n) &gt; n</code>.\r\n            </li>\r\n            <li>\r\n              <strong>Pseudorandomness:</strong> For any probabilistic polynomial-time (PPT)\r\n              algorithm <code>D</code>, there is a negligible function <code>negl(n)</code> such that:\r\n              <blockquote>\r\n                <code>\r\n                  Pr[D(G(s)) = 1] − Pr[D(r) = 1] ≤ negl(n),\r\n                </code>\r\n              </blockquote>\r\n              <p>\r\n                where the first probability is taken over the uniform choice of <code>s ∈ &#123;0, 1&#125;<sup>n</sup></code>\r\n                and the randomness of <code>D</code>, and the second probability is taken over the\r\n                uniform choice of <code>r ∈ &#123;0, 1&#125;<sup>ℓ(n)</sup></code> and the randomness of <code>D</code>.\r\n              </p>\r\n            </li>\r\n          </ol>\r\n          <p>\r\n            <code>ℓ(n)</code> is the expansion factor of <code>G</code>.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Head = () => <Seo title=\"Pseudorandom Generator (PRG)\" />;\r\n\r\nexport default pseudorandomGeneratorPage;\r\n"],"names":["React","Link","Navbar","Layout","children","display","flexDirection","minHeight","margin","maxWidth","padding","flex","textAlign","fontSize","backgroundColor","color","Date","getFullYear","Seo","description","title","site","metaDescription","siteMetadata","defaultTitle","author","pseudorandomGeneratorPage","Head"],"sourceRoot":""}