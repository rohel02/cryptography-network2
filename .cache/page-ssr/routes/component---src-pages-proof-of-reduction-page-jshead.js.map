{"version":3,"file":"component---src-pages-proof-of-reduction-page-jshead.js","mappings":"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","sources":["webpack://Cryptography/./src/components/Navbar.js","webpack://Cryptography/./src/components/layout.js","webpack://Cryptography/./src/components/seo.js","webpack://Cryptography/./src/pages/proofOfReductionPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport  \"../styles/global.css\"\r\n\r\nconst Navbar = () => {\r\nreturn(\r\n    <div className=\"top-menu\">\r\n        <div className=\"menu-items\">\r\n            <Link to=\"/\" className=\"menu-item\">Home</Link>\r\n            <Link to=\"/topics\" className=\"menu-item\">Topics</Link>\r\n            <Link to=\"/examples\" className=\"menu-item\">Examples</Link>\r\n            <Link to=\"/about\" className=\"menu-item\">About</Link>\r\n            <Link to=\"/contact\" className=\"menu-item\">Contact</Link>\r\n        </div>\r\n        <input type=\"text\" className=\"search-bar\" placeholder=\"Search topics...\"/>\r\n    </div>\r\n\r\n);\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"../styles/global.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", minHeight: \"100vh\" }}>\r\n\r\n      {/* Main Content */}\r\n      <main\r\n        style={{\r\n          margin: \"0 auto\",\r\n          maxWidth: \"var(--size-content)\",\r\n          padding: \"var(--space-4)\",\r\n          flex: 1, \r\n        }}\r\n      >\r\n        {children}\r\n      </main>\r\n\r\n      \r\n      <footer\r\n        style={{\r\n          textAlign: \"center\",\r\n          padding: \"var(--space-3) var(--space-4)\",\r\n          fontSize: \"var(--font-sm)\",\r\n          backgroundColor: \"#f8f9fa\", \r\n          color: \"#6c757d\", \r\n        }}\r\n      >\r\n        © {new Date().getFullYear()} · Built with Gatsby\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport Seo from \"../components/seo\";\r\n\r\nimport \"../styles/global.css\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst proofOfReductionPage = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"book-container\">\r\n        <div className=\"content\">\r\n          <h1>Proof of Reduction</h1>\r\n          <p>\r\n            In cryptography, computational security relies on unproven assumptions since\r\n            most schemes are not information-theoretically secure. The strategy is to\r\n            assume the hardness of a mathematical problem or the security of a low-level\r\n            cryptographic primitive and to prove that the construction built on it is secure\r\n            under this assumption.\r\n          </p>\r\n          <p>\r\n            A proof of security for a cryptographic construction is typically achieved\r\n            through a reduction. This method explicitly shows how any efficient adversary <code>A</code> \r\n            that can break the cryptographic scheme <code>Π</code> can be transformed into an\r\n            efficient algorithm <code>A′</code> that solves the underlying hard problem <code>X</code>. \r\n          </p>\r\n          <h2>Steps for a Proof by Reduction</h2>\r\n          <ol>\r\n            <li>\r\n              Fix some efficient (i.e., probabilistic polynomial-time) adversary <code>A</code>\r\n              attacking <code>Π</code>. Denote this adversary’s success probability by <code>ϵ(n)</code>.\r\n            </li>\r\n            <li>\r\n              Construct an efficient algorithm <code>A′</code> that attempts to solve problem <code>X</code> \r\n              by using adversary <code>A</code> as a subroutine. An important point here is that <code>A′</code> \r\n              knows nothing about how <code>A</code> works; the only thing <code>A′</code> knows is that <code>A</code> \r\n              is expecting to attack <code>Π</code>. So, given some input instance <code>x</code> of problem <code>X</code>, \r\n              our algorithm <code>A′</code> will simulate for <code>A</code> an instance of <code>Π</code> such that:\r\n              <ul>\r\n                <li>\r\n                  As far as <code>A</code> can tell, it is interacting with <code>Π</code>. That is, the view of <code>A</code>\r\n                  when run as a subroutine by <code>A′</code> should be distributed identically to (or at least close to) \r\n                  the view of <code>A</code> when it interacts with <code>Π</code>.\r\n                </li>\r\n                <li>\r\n                  When <code>A</code> succeeds in breaking the instance of <code>Π</code> that is being\r\n                  simulated by <code>A′</code>, this should allow <code>A′</code> to solve the instance <code>x</code> it was\r\n                  given, at least with inverse polynomial probability <code>1/p(n)</code>. In other\r\n                  words, we attempt to reduce the problem of solving <code>X</code> to the\r\n                  problem of breaking <code>Π</code>.\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li>\r\n              Taken together, the above imply that <code>A′</code> solves <code>X</code> with probability\r\n              <code>ϵ(n)/p(n)</code>. Now, if <code>ϵ(n)</code> is not negligible, then neither is <code>ϵ(n)/p(n)</code>.\r\n              Moreover, if <code>A′</code> is efficient, we obtain an efficient algorithm <code>A′</code> solving <code>X</code>\r\n              with non-negligible probability, contradicting our initial assumption.\r\n            </li>\r\n            <li>\r\n              Given our assumption regarding <code>X</code>, we conclude that no efficient\r\n              adversary <code>A</code> can succeed in breaking <code>Π</code> with non-negligible probability.\r\n              Stated differently, <code>Π</code> is computationally secure.\r\n            </li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Head = () => <Seo title=\"Proof of Reduction\" />;\r\n\r\nexport default proofOfReductionPage;\r\n"],"names":["React","Link","Navbar","Layout","children","display","flexDirection","minHeight","margin","maxWidth","padding","flex","textAlign","fontSize","backgroundColor","color","Date","getFullYear","Seo","description","title","site","metaDescription","siteMetadata","defaultTitle","author","proofOfReductionPage","Head"],"sourceRoot":""}